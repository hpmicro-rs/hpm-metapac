use crate::metadata::ir::*;
pub(crate) static REGISTERS: IR = IR {
    blocks: &[
        Block {
            name: "Cmd",
            extends: None,
            description: Some("no description available."),
            items: &[
                BlockItem {
                    name: "control",
                    description: Some("tra&index0_cmd&index1_control."),
                    array: None,
                    byte_offset: 0x0,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("CmdControl"),
                    }),
                },
                BlockItem {
                    name: "rev_preset",
                    description: Some("tra&index0_cmd&index1_rev_preset."),
                    array: None,
                    byte_offset: 0x4,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("RevPreset"),
                    }),
                },
                BlockItem {
                    name: "pos_preset",
                    description: Some("tra&index0_cmd&index1_pos_preset."),
                    array: None,
                    byte_offset: 0x8,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("PosPreset"),
                    }),
                },
                BlockItem {
                    name: "vel_preset",
                    description: Some("tra&index0_cmd&index1_vel_preset."),
                    array: None,
                    byte_offset: 0xc,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("VelPreset"),
                    }),
                },
                BlockItem {
                    name: "acc_preset",
                    description: Some("tra&index0_cmd&index1_acc_preset."),
                    array: None,
                    byte_offset: 0x10,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("AccPreset"),
                    }),
                },
                BlockItem {
                    name: "jer_preset",
                    description: Some("tra&index0_cmd&index1_jer_preset."),
                    array: None,
                    byte_offset: 0x14,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("JerPreset"),
                    }),
                },
                BlockItem {
                    name: "timestamp",
                    description: Some("tra&index0_cmd&index1_timestamp."),
                    array: None,
                    byte_offset: 0x18,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("CmdTimestamp"),
                    }),
                },
            ],
        },
        Block {
            name: "Event",
            extends: None,
            description: Some("no description available."),
            items: &[
                BlockItem {
                    name: "control",
                    description: Some("event&index0_control."),
                    array: None,
                    byte_offset: 0x0,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("EventControl"),
                    }),
                },
                BlockItem {
                    name: "preset_0",
                    description: Some("event&index0_preset_0."),
                    array: None,
                    byte_offset: 0x4,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("Preset0"),
                    }),
                },
                BlockItem {
                    name: "preset_1",
                    description: Some("event&index0_preset_1."),
                    array: None,
                    byte_offset: 0x8,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("Preset1"),
                    }),
                },
                BlockItem {
                    name: "preset_2",
                    description: Some("event&index0_preset_2."),
                    array: None,
                    byte_offset: 0xc,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("Preset2"),
                    }),
                },
                BlockItem {
                    name: "preset_3",
                    description: Some("event&index0_preset_3."),
                    array: None,
                    byte_offset: 0x10,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("Preset3"),
                    }),
                },
                BlockItem {
                    name: "timestamp",
                    description: Some("event&index0_timestamp."),
                    array: None,
                    byte_offset: 0x14,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("EventTimestamp"),
                    }),
                },
            ],
        },
        Block {
            name: "Mtg",
            extends: None,
            description: Some("MTG0."),
            items: &[
                BlockItem {
                    name: "tra",
                    description: Some("no description available."),
                    array: Some(Array::Regular(RegularArray {
                        len: 2,
                        stride: 4096,
                    })),
                    byte_offset: 0x0,
                    inner: BlockItemInner::Block(BlockItemBlock { block: "Tra" }),
                },
                BlockItem {
                    name: "event",
                    description: Some("no description available."),
                    array: Some(Array::Regular(RegularArray { len: 4, stride: 32 })),
                    byte_offset: 0x2000,
                    inner: BlockItemInner::Block(BlockItemBlock { block: "Event" }),
                },
                BlockItem {
                    name: "sw_event",
                    description: Some("sw_event."),
                    array: None,
                    byte_offset: 0x2080,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("SwEvent"),
                    }),
                },
                BlockItem {
                    name: "sw_glb_reset",
                    description: Some("sw_glb_reset."),
                    array: None,
                    byte_offset: 0x2084,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("SwGlbReset"),
                    }),
                },
                BlockItem {
                    name: "filter_control",
                    description: Some("filter_control."),
                    array: None,
                    byte_offset: 0x3000,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterControl"),
                    }),
                },
                BlockItem {
                    name: "filter_rev_value",
                    description: Some("filter_rev_value."),
                    array: None,
                    byte_offset: 0x3010,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterRevValue"),
                    }),
                },
                BlockItem {
                    name: "filter_pos_value",
                    description: Some("filter_pos_value."),
                    array: None,
                    byte_offset: 0x3014,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterPosValue"),
                    }),
                },
                BlockItem {
                    name: "filter_vel_value",
                    description: Some("filter_vel_value."),
                    array: None,
                    byte_offset: 0x3018,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterVelValue"),
                    }),
                },
                BlockItem {
                    name: "filter_acc_value",
                    description: Some("filter_acc_value."),
                    array: None,
                    byte_offset: 0x301c,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterAccValue"),
                    }),
                },
                BlockItem {
                    name: "filter_mot_sel",
                    description: Some("filter_mot_sel."),
                    array: None,
                    byte_offset: 0x3020,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterMotSel"),
                    }),
                },
                BlockItem {
                    name: "filter_stage_sel",
                    description: Some("filter_stage_sel."),
                    array: None,
                    byte_offset: 0x3024,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterStageSel"),
                    }),
                },
                BlockItem {
                    name: "filter_time_constant_tp",
                    description: Some("filter_time_constant_tp."),
                    array: None,
                    byte_offset: 0x3028,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterTimeConstantTp"),
                    }),
                },
                BlockItem {
                    name: "filter_time_constant_tz",
                    description: Some("filter_time_constant_tz."),
                    array: None,
                    byte_offset: 0x302c,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterTimeConstantTz"),
                    }),
                },
                BlockItem {
                    name: "filter_time_constant_tz_1",
                    description: Some("filter_time_constant_tz_1."),
                    array: None,
                    byte_offset: 0x3030,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterTimeConstantTz1"),
                    }),
                },
                BlockItem {
                    name: "filter_zero_tz_sel",
                    description: Some("filter_zero_tz_sel."),
                    array: None,
                    byte_offset: 0x3034,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterZeroTzSel"),
                    }),
                },
                BlockItem {
                    name: "filter_gain",
                    description: Some("filter_gain."),
                    array: None,
                    byte_offset: 0x3038,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterGain"),
                    }),
                },
                BlockItem {
                    name: "filter_stage_shift0",
                    description: Some("filter_stage_shift0."),
                    array: None,
                    byte_offset: 0x303c,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterStageShift0"),
                    }),
                },
                BlockItem {
                    name: "filter_stage_shift1",
                    description: Some("filter_stage_shift1."),
                    array: None,
                    byte_offset: 0x3040,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterStageShift1"),
                    }),
                },
                BlockItem {
                    name: "filter_param_shift",
                    description: Some("filter_param_shift."),
                    array: None,
                    byte_offset: 0x3044,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterParamShift"),
                    }),
                },
                BlockItem {
                    name: "filter_time_shift",
                    description: Some("filter_time_shift."),
                    array: None,
                    byte_offset: 0x3048,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterTimeShift"),
                    }),
                },
                BlockItem {
                    name: "filter_ff_shift",
                    description: Some("filter_ff_shift."),
                    array: None,
                    byte_offset: 0x304c,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterFfShift"),
                    }),
                },
                BlockItem {
                    name: "filter_time1_sw_adjust",
                    description: Some("filter_time1_sw_adjust."),
                    array: None,
                    byte_offset: 0x3050,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterTime1SwAdjust"),
                    }),
                },
                BlockItem {
                    name: "filter_time0_sw_adjust",
                    description: Some("filter_time0_sw_adjust."),
                    array: None,
                    byte_offset: 0x3054,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterTime0SwAdjust"),
                    }),
                },
                BlockItem {
                    name: "filter_error_limit_l",
                    description: Some("filter_error_limit."),
                    array: None,
                    byte_offset: 0x3060,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterErrorLimitL"),
                    }),
                },
                BlockItem {
                    name: "filter_error_limit_h",
                    description: Some("filter_error_limit."),
                    array: None,
                    byte_offset: 0x3064,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterErrorLimitH"),
                    }),
                },
                BlockItem {
                    name: "filter_timeout_cnt",
                    description: Some("filter_timeout_cnt."),
                    array: None,
                    byte_offset: 0x306c,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterTimeoutCnt"),
                    }),
                },
                BlockItem {
                    name: "filter_rev_lock",
                    description: Some("filter_rev_lock."),
                    array: None,
                    byte_offset: 0x3070,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterRevLock"),
                    }),
                },
                BlockItem {
                    name: "filter_pos_lock",
                    description: Some("filter_pos_lock."),
                    array: None,
                    byte_offset: 0x3074,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterPosLock"),
                    }),
                },
                BlockItem {
                    name: "filter_vel_lock",
                    description: Some("filter_vel_lock."),
                    array: None,
                    byte_offset: 0x3078,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterVelLock"),
                    }),
                },
                BlockItem {
                    name: "filter_acc_lock",
                    description: Some("filter_acc_lock."),
                    array: None,
                    byte_offset: 0x307c,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("FilterAccLock"),
                    }),
                },
            ],
        },
        Block {
            name: "Tra",
            extends: None,
            description: Some("no description available."),
            items: &[
                BlockItem {
                    name: "control",
                    description: Some("tra&index0_control."),
                    array: None,
                    byte_offset: 0x0,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("TraControl"),
                    }),
                },
                BlockItem {
                    name: "shift",
                    description: Some("tra&index0_shift."),
                    array: None,
                    byte_offset: 0x4,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("Shift"),
                    }),
                },
                BlockItem {
                    name: "link",
                    description: Some("tra&index0_link."),
                    array: None,
                    byte_offset: 0x8,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("Link"),
                    }),
                },
                BlockItem {
                    name: "cmd",
                    description: Some("no description available."),
                    array: Some(Array::Regular(RegularArray { len: 4, stride: 32 })),
                    byte_offset: 0x20,
                    inner: BlockItemInner::Block(BlockItemBlock { block: "Cmd" }),
                },
                BlockItem {
                    name: "lock_rev",
                    description: Some("tra&index0_lock_rev."),
                    array: None,
                    byte_offset: 0xa0,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("LockRev"),
                    }),
                },
                BlockItem {
                    name: "lock_pos",
                    description: Some("tra&index0_lock_pos."),
                    array: None,
                    byte_offset: 0xa4,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("LockPos"),
                    }),
                },
                BlockItem {
                    name: "lock_vel",
                    description: Some("tra&index0_lock_vel."),
                    array: None,
                    byte_offset: 0xa8,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("LockVel"),
                    }),
                },
                BlockItem {
                    name: "lock_acc",
                    description: Some("tra&index0_lock_acc."),
                    array: None,
                    byte_offset: 0xac,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("LockAcc"),
                    }),
                },
                BlockItem {
                    name: "lock_time",
                    description: Some("tra&index0_lock_time."),
                    array: None,
                    byte_offset: 0xb0,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("LockTime"),
                    }),
                },
                BlockItem {
                    name: "step_limit_ctrl",
                    description: Some("tra&index0_step_limit_ctrl."),
                    array: None,
                    byte_offset: 0xc0,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("StepLimitCtrl"),
                    }),
                },
                BlockItem {
                    name: "vel_step_max",
                    description: Some("tra&index0_vel_step_max."),
                    array: None,
                    byte_offset: 0xc4,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("VelStepMax"),
                    }),
                },
                BlockItem {
                    name: "vel_step_min",
                    description: Some("tra&index0_vel_step_min."),
                    array: None,
                    byte_offset: 0xc8,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("VelStepMin"),
                    }),
                },
                BlockItem {
                    name: "pos_step_max",
                    description: Some("tra&index0_pos_step_max."),
                    array: None,
                    byte_offset: 0xcc,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("PosStepMax"),
                    }),
                },
                BlockItem {
                    name: "pos_step_min",
                    description: Some("tra&index0_pos_step_min."),
                    array: None,
                    byte_offset: 0xd0,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("PosStepMin"),
                    }),
                },
                BlockItem {
                    name: "vel_limit_p",
                    description: Some("tra&index0_vel_limit_p."),
                    array: None,
                    byte_offset: 0xd4,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("VelLimitP"),
                    }),
                },
                BlockItem {
                    name: "vel_limit_n",
                    description: Some("tra&index0_vel_limit_n."),
                    array: None,
                    byte_offset: 0xd8,
                    inner: BlockItemInner::Register(Register {
                        access: Access::ReadWrite,
                        bit_size: 32,
                        fieldset: Some("VelLimitN"),
                    }),
                },
            ],
        },
    ],
    fieldsets: &[
        FieldSet {
            name: "AccPreset",
            extends: None,
            description: Some("tra&index0_cmd&index1_acc_preset."),
            bit_size: 32,
            fields: &[Field {
                name: "acc_preset",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "CmdControl",
            extends: None,
            description: Some("tra&index0_cmd&index1_control."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "object",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 5,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mode",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pass_irq_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 30 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pass_irq",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "CmdTimestamp",
            extends: None,
            description: Some("tra&index0_cmd&index1_timestamp."),
            bit_size: 32,
            fields: &[Field {
                name: "timestamp",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "EventControl",
            extends: None,
            description: Some("event&index0_control."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "event_irq",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "event_over_irq",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "event_irq_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "event_over_irq_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "trig_num",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "over_mode_cmp",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dir_mode",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dir",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 2,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mode",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "object",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 23 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "source_mux",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 27 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "enable",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "EventTimestamp",
            extends: None,
            description: Some("event&index0_timestamp."),
            bit_size: 32,
            fields: &[Field {
                name: "timestamp",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterAccLock",
            extends: None,
            description: Some("filter_acc_lock."),
            bit_size: 32,
            fields: &[Field {
                name: "acc_status",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterAccValue",
            extends: None,
            description: Some("filter_acc_value."),
            bit_size: 32,
            fields: &[Field {
                name: "value",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterControl",
            extends: None,
            description: Some("filter_control."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "enable",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "init_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ff_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ff_mode",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "err_bypass_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "err_ini",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "a_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "en_time0",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "en_time1",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 9 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sel_time0",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 10 }),
                    bit_size: 2,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sel_time1",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 2,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rev_ini_mode",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "timeout_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sw_lock",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "err_bypass_i_f_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "err_bypass_f_i_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "err_bypass_status",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 23 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mul_err_irq_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mul_err_irq_1",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 30 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mul_err_irq_0",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "FilterErrorLimitH",
            extends: None,
            description: Some("filter_error_limit."),
            bit_size: 32,
            fields: &[Field {
                name: "error_limit_h",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterErrorLimitL",
            extends: None,
            description: Some("filter_error_limit."),
            bit_size: 32,
            fields: &[Field {
                name: "error_limit_l",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterFfShift",
            extends: None,
            description: Some("filter_ff_shift."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "filter_vel_shift",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "output_vel_shift",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "filter_acc_shift",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "output_acc_shift",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "FilterGain",
            extends: None,
            description: Some("filter_gain."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "k",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 24,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gain_t1_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 30 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gain_t0_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "FilterMotSel",
            extends: None,
            description: Some("filter_mot_sel."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "filter_acc_sel",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 6,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "filter_vel_sel",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 6,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "output_acc_sel",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 6,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "output_vel_sel",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 6,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "FilterParamShift",
            extends: None,
            description: Some("filter_param_shift."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tz_shift",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tz_1_shift",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tp_shift",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gain_t1_shift",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gain_t0_shift",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "gain_k_shift",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vel_shift_param",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "acc_shift_param",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "FilterPosLock",
            extends: None,
            description: Some("filter_pos_lock."),
            bit_size: 32,
            fields: &[Field {
                name: "pos_status",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterPosValue",
            extends: None,
            description: Some("filter_pos_value."),
            bit_size: 32,
            fields: &[Field {
                name: "value",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterRevLock",
            extends: None,
            description: Some("filter_rev_lock."),
            bit_size: 32,
            fields: &[Field {
                name: "rev_status",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterRevValue",
            extends: None,
            description: Some("filter_rev_value."),
            bit_size: 32,
            fields: &[Field {
                name: "value",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterStageSel",
            extends: None,
            description: Some("filter_stage_sel."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "stage0_sel",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 5,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage1_sel",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 5,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage2_sel",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 10 }),
                    bit_size: 5,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage3_sel",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 5,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage4_sel",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 5,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage5_sel",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 5,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "FilterStageShift0",
            extends: None,
            description: Some("filter_stage_shift0."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "stage0_shift0",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage0_shift1",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage1_shift0",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage1_shift1",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage2_shift0",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage2_shift1",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage3_shift0",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage3_shift1",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "FilterStageShift1",
            extends: None,
            description: Some("filter_stage_shift1."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "stage4_shift0",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage4_shift1",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage5_shift0",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage5_shift1",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "FilterTime0SwAdjust",
            extends: None,
            description: Some("filter_time0_sw_adjust."),
            bit_size: 32,
            fields: &[Field {
                name: "time",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterTime1SwAdjust",
            extends: None,
            description: Some("filter_time1_sw_adjust."),
            bit_size: 32,
            fields: &[Field {
                name: "time",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterTimeConstantTp",
            extends: None,
            description: Some("filter_time_constant_tp."),
            bit_size: 32,
            fields: &[Field {
                name: "tp",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 24,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterTimeConstantTz",
            extends: None,
            description: Some("filter_time_constant_tz."),
            bit_size: 32,
            fields: &[Field {
                name: "tz",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 24,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterTimeConstantTz1",
            extends: None,
            description: Some("filter_time_constant_tz_1."),
            bit_size: 32,
            fields: &[Field {
                name: "tz_1",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 24,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterTimeShift",
            extends: None,
            description: Some("filter_time_shift."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "vel_shift_time0",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "acc_shift_time0",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vel_shift_time1",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "acc_shift_time1",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "FilterTimeoutCnt",
            extends: None,
            description: Some("filter_timeout_cnt."),
            bit_size: 32,
            fields: &[Field {
                name: "timeout_cnt",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterVelLock",
            extends: None,
            description: Some("filter_vel_lock."),
            bit_size: 32,
            fields: &[Field {
                name: "vel_status",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterVelValue",
            extends: None,
            description: Some("filter_vel_value."),
            bit_size: 32,
            fields: &[Field {
                name: "value",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "FilterZeroTzSel",
            extends: None,
            description: Some("filter_zero_tz_sel."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "stage0",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage1",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage2",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage3",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage4",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "stage5",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "JerPreset",
            extends: None,
            description: Some("tra&index0_cmd&index1_jer_preset."),
            bit_size: 32,
            fields: &[Field {
                name: "jer_preset",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Link",
            extends: None,
            description: Some("tra&index0_link."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "link_cfg_0",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 3,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "link_cfg_1",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 3,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "link_cfg_2",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 3,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "link_cfg_3",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 3,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "LockAcc",
            extends: None,
            description: Some("tra&index0_lock_acc."),
            bit_size: 32,
            fields: &[Field {
                name: "lock_acc",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "LockPos",
            extends: None,
            description: Some("tra&index0_lock_pos."),
            bit_size: 32,
            fields: &[Field {
                name: "lock_pos",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "LockRev",
            extends: None,
            description: Some("tra&index0_lock_rev."),
            bit_size: 32,
            fields: &[Field {
                name: "lock_rev",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "LockTime",
            extends: None,
            description: Some("tra&index0_lock_time."),
            bit_size: 32,
            fields: &[Field {
                name: "lock_time",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "LockVel",
            extends: None,
            description: Some("tra&index0_lock_vel."),
            bit_size: 32,
            fields: &[Field {
                name: "lock_vel",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "PosPreset",
            extends: None,
            description: Some("tra&index0_cmd&index1_pos_preset."),
            bit_size: 32,
            fields: &[Field {
                name: "pos_preset",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "PosStepMax",
            extends: None,
            description: Some("tra&index0_pos_step_max."),
            bit_size: 32,
            fields: &[Field {
                name: "pos_step_max",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "PosStepMin",
            extends: None,
            description: Some("tra&index0_pos_step_min."),
            bit_size: 32,
            fields: &[Field {
                name: "pos_step_min",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Preset0",
            extends: None,
            description: Some("event&index0_preset_0."),
            bit_size: 32,
            fields: &[Field {
                name: "preset",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Preset1",
            extends: None,
            description: Some("event&index0_preset_1."),
            bit_size: 32,
            fields: &[Field {
                name: "preset",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Preset2",
            extends: None,
            description: Some("event&index0_preset_2."),
            bit_size: 32,
            fields: &[Field {
                name: "preset",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Preset3",
            extends: None,
            description: Some("event&index0_preset_3."),
            bit_size: 32,
            fields: &[Field {
                name: "preset",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "RevPreset",
            extends: None,
            description: Some("tra&index0_cmd&index1_rev_preset."),
            bit_size: 32,
            fields: &[Field {
                name: "rev_preset",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "Shift",
            extends: None,
            description: Some("tra&index0_shift."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "vel_shift",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 4,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "acc_shift",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 3,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "jer_shift",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 3,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "shift_fail_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vel_shift_fail_irq",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 30 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "acc_shift_fail_irq",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "StepLimitCtrl",
            extends: None,
            description: Some("tra&index0_step_limit_ctrl."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "vel_step_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vel_one_way_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "vel_one_way_mode",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pos_step_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pos_step_mode",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 9 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pos_one_way_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 10 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pos_one_way_mode",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pos_one_way_force_mode",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "SwEvent",
            extends: None,
            description: Some("sw_event."),
            bit_size: 32,
            fields: &[Field {
                name: "sw_event_trig",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 1,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "SwGlbReset",
            extends: None,
            description: Some("sw_glb_reset."),
            bit_size: 32,
            fields: &[Field {
                name: "sw_glb_reset",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 1,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "TraControl",
            extends: None,
            description: Some("tra&index0_control."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "ovalid_clear",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sw_lock",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lock_irq",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cmd_fail_irq",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lock_irq_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cmd_fail_irq_en",
                    description: Some("No description available."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "VelLimitN",
            extends: None,
            description: Some("tra&index0_vel_limit_n."),
            bit_size: 32,
            fields: &[Field {
                name: "vel_limit_n",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "VelLimitP",
            extends: None,
            description: Some("tra&index0_vel_limit_p."),
            bit_size: 32,
            fields: &[Field {
                name: "vel_limit_p",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "VelPreset",
            extends: None,
            description: Some("tra&index0_cmd&index1_vel_preset."),
            bit_size: 32,
            fields: &[Field {
                name: "vel_preset",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "VelStepMax",
            extends: None,
            description: Some("tra&index0_vel_step_max."),
            bit_size: 32,
            fields: &[Field {
                name: "vel_step_max",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
        FieldSet {
            name: "VelStepMin",
            extends: None,
            description: Some("tra&index0_vel_step_min."),
            bit_size: 32,
            fields: &[Field {
                name: "vel_step_min",
                description: Some("No description available."),
                bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                bit_size: 32,
                array: None,
                enumm: None,
            }],
        },
    ],
    enums: &[],
};
